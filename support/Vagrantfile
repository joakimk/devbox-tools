# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# There are probably better ways to hook into "vagrant up", haven't had
# any problems with this yet, but please do contribute if you do.
if ARGV.first == "up"
  # You can use this to lock down the devbox-tools version, but
  # running "dev update" will do "git pull" in this repo.
  File.exists?("devbox-tools") || system("git clone git@github.com:joakimk/devbox-tools.git") || exit(1)
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.provider "virtualbox" do |vb|
    vb.customize [ "modifyvm", :id, "--memory", "1024" ]
  end

  config.vm.box = "ubuntu-14.04-amd64-vbox"

  # The box must have docker support. For more boxes see http://www.vagrantbox.es/.
  #
  # Also consider that many of the devbox-tools plugins have system package dependencies and may
  # need to be modified to work with other distributions.
  config.vm.box_url = "https://oss-binaries.phusionpassenger.com/vagrant/boxes/latest/#{config.vm.box}.box"

  config.vm.provision :shell, inline: %{
    set -e

    if [ ! -e /usr/bin/docker ]
    then
      # Make the prompt look nicer
      echo "devbox" > /etc/hostname
      echo "127.0.1.1 devbox" >> /etc/hosts
      sudo hostnamectl set-hostname devbox

      # Add docker source
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
      sh -c "echo deb https://get.docker.com/ubuntu docker main > /etc/apt/sources.list.d/docker.list"

      # Install some basic tools that devbox-tools needs to bootstrap itself (adapt for your box type)
      export DEBIAN_FRONTEND="noninteractive"
      apt-get update && apt-get install build-essential unzip git bison lxc-docker libssl-dev libyaml-dev ntp rake zsh -y

      echo "source /home/vagrant/.devbox_environment" >> /home/vagrant/.profile

      /vagrant/devbox-tools/support/install_dependencies
    fi

    # Add devbox-tools hooks
    echo "source /vagrant/devbox-tools/support/shell" > /home/vagrant/.devbox_environment

    echo
    echo "VM ready! Log in using: vagrant ssh"
  }

  # Setup a synced folder to access your projects. NFS is much faster than the default method.
  # config.vm.synced_folder "/projects", "/path/to/your/projects", :nfs => true

  # To be able to access web servers and such running inside the VM.
  config.vm.network :private_network, ip: "10.11.12.13"

  # This can be removed, used for devbox-tools's integration tests
  # TODO: Use templating
  if ENV["RUNNING_TEST"]
    config.vm.synced_folder "../..", "/devbox-tools"
  end
end
